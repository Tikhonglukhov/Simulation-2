from abc import ABC, abstractmethod
from random import randint
class Entity(ABC):
    pass

class Rock(Entity):
    pass
class Grass(Entity):
    pass
class Tree(Entity):
    pass
class Creature(Entity):
    def __init__(self):
        self.speed = randint(1, 5)
        self.xp = randint(5, 10)
    @abstractmethod
    def make_move(self):
        pass
class Herbivore(Creature):
    def __init__(self):
        super().__init__()
    def make_move(self):
        pass
class Predator(Creature):
    def __init__(self):
        super().__init__()
    def make_move(self):
        pass
class Map:
    def __init__(self):
        self.x, self.y = randint(20, 100), randint(20, 100) 
class Simulation:
    def __init__(self):
        self.map = Map()
        self.counter = 0
        self.renderer = None
    def next_turn(self):
        pass
    def start_simulation(self):
        pass
    def pause_simulation(self):
        pass
